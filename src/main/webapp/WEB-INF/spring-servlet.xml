<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   		http://www.springframework.org/schema/tx 
	   		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
	
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package-->
	<context:component-scan base-package="com.dci" />
	
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven />
	
	<!-- Configures a handler for serving static resources by forwarding to the Servlet container's default Servlet. -->
	<mvc:default-servlet-handler />
	
	<!-- THIS IS IMPORTANT USE FOR SPRING MVC TO READ FOLDER CSS, JS,.. !!! -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Tiles View -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
			</value>
		</property>
	</bean>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- Based Message Source configure for Spring MVC. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/hibernate.properties" />
		
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="location" value="/WEB-INF/jasper-views.xml"/>
        <property name="order" value="0"/>
    </bean>
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
				 p:dataSource-ref="dataSource"
				 p:configLocation="${mysql.hibernate.config}"
				 p:packagesToScan="com.dci"/> -->
	
	<!-- Declare a datasource that has pooling capabilities-->	 
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
				destroy-method="close"
				p:driverClass="${mysql.jdbc.driverClassName}"
				p:jdbcUrl="${mysql.jdbc.url}"
				p:user="${mysql.jdbc.username}"
				p:password="${mysql.jdbc.password}"
				p:acquireIncrement="5"
				p:idleConnectionTestPeriod="60"
				p:maxPoolSize="100"
				p:maxStatements="50"
				p:minPoolSize="10" /> -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
        <property name="password" value="${mysql.jdbc.password}" />
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />	
		</property>
		
 
		<property name="packagesToScan" value="com.dci.model" />
		<property name="hibernateProperties">
			<props>
				
        		<prop key="current_session_context_class">${mysql.hibernate.session}</prop>
				<prop key="hibernate.dialect">${mysql.hibernate.dialect}</prop>

				<prop key="hibernate.hbm2ddl.auto">${mysql.hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${mysql.hibernate.show.sql}</prop>
				<prop key="hibernate.cache.provider_class">${hsqldb.hibernate.provider_class}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	<!-- this is for Email notification -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="49.128.180.155" /> <!-- smtp.gmail.com -->
		<property name="port" value="465" /> <!-- 587 -->
		<property name="username" value="rahadhitya@sriboga-smg.co.id" />
		<property name="password" value="090681" />
		
		<property name="javaMailProperties">
			<props>
				 <prop key="mail.transport.protocol">smtp</prop>
            	<prop key="mail.smtp.auth">true</prop>
            	<prop key="mail.smtp.starttls.enable">true</prop>
            	<prop key="mail.debug">true</prop>
        	</props>
		</property>
		
	</bean>
	
	<bean id="orderManagerImpl" class="com.dci.service.impl.OrderManagerImpl">
		<property name="mailSender" ref="mailSender" />
		<property name="preConfiguredMessage" ref="customeMailMessage" />
	</bean>
	
	<bean id="customeMailMessage"
		class="org.springframework.mail.SimpleMailMessage">

		<property name="from" value="rahadhitya@sriboga-smg.co.id" /> <!-- from@no-spam.com -->
		<property name="to" value="agung.setyawan@sriboga-smg.co.id" /> <!-- to@no-spam.com -->
		<property name="subject" value="Testing Subject" />
		<property name="text">
		<value>
			<![CDATA[
				Dear %s,
				Mail Content : %s
			]]>
		</value>
	</property>
	</bean>
	
</beans>
